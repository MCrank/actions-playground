name: Slack test

env:
  SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

on:
  push:

jobs:
  start_notification:
    runs-on: ubuntu-latest
    outputs:
      slack_msg_id: ${{ steps.slack_msg.outputs.message_id }}
    steps:
      - name: Start notification
        id: slack_msg
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: "C01V90RS9NH"
          status: RUNNING
          color: warning
      - name: Messsage Id
        run: echo ${{ steps.slack_msg.outputs.message_id }}

  docker:
    runs-on: ubuntu-latest
    needs: [start_notification]
    steps:
      - name: Docker build
        run: sleep 60s

      - name: slack_docker
        if: failure()
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: "C01V90RS9NH"
          status: FAILED
          color: danger
          message_id: ${{ needs.start_notification.outputs.slack_msg_id }}

  helm:
    runs-on: ubuntu-latest
    needs: [start_notification, docker]
    steps:
      - name: Helm push
        run: sleep 60s

      - name: slack_helm_fail
        if: failure()
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: "C01V90RS9NH"
          status: FAILED
          color: danger
          message_id: ${{ needs.start_notification.outputs.slack_msg_id }}

  deploy:
    runs-on: ubuntu-latest
    needs: [start_notification, helm]
    steps:
      - name: Helm deploy
        run: sleep 60s

      - name: Fail
        run: exit 1

      - name: Echo Message Id
        run: echo ${{ needs.start_notification.outputs.slack_msg_id }}

      - name: slack_deploy_fail
        if: always()
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: "C01V90RS9NH"
          status: ${{ success && 'SUCCESS' || 'FAILED' }}
          color: ${{ success && 'good' || 'danger' }}
          message_id: ${{ needs.start_notification.outputs.slack_msg_id }}
